name: CI - Build & Lint

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      SONAR_TOKEN:           ${{ secrets.SONAR_TOKEN }}
      DWOLLA_ENVIRONMENT:    ${{ secrets.DWOLLA_ENVIRONMENT }}
      DWOLLA_KEY:            ${{ secrets.DWOLLA_KEY }}
      DWOLLA_SECRET:         ${{ secrets.DWOLLA_SECRET }}
      DWOLLA_BASE_URL:       ${{ secrets.DWOLLA_BASE_URL }}
      PLAID_CLIENT_ID:       ${{ secrets.PLAID_CLIENT_ID }}
      PLAID_SECRET:          ${{ secrets.PLAID_SECRET }}
      PLAID_ENV:             ${{ secrets.PLAID_ENV }}
      PLAID_PRODUCTS:        ${{ secrets.PLAID_PRODUCTS }}
      NEXT_APPWRITE_KEY:     ${{ secrets.NEXT_APPWRITE_KEY }}
      APPWRITE_DATABASE_ID:  ${{ secrets.APPWRITE_DATABASE_ID }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      # ‚úÖ V√©rif rapide : la variable est-elle vraiment l√† ?
      - name: Debug env
        run: |
          echo "DWOLLA_ENVIRONMENT = '${DWOLLA_ENVIRONMENT}'"
          if [ -z "$DWOLLA_ENVIRONMENT" ]; then
            echo "‚ùå DWOLLA_ENVIRONMENT is EMPTY ‚Äì build will fail" && exit 1
          fi

      # üìù  .env.production (facultatif mais utile pour d‚Äôautres libs dotenv)
      - name: Create .env.production
        run: |
          echo "DWOLLA_ENVIRONMENT=${DWOLLA_ENVIRONMENT}"          >  .env.production
          echo "DWOLLA_KEY=${DWOLLA_KEY}"                         >> .env.production
          echo "DWOLLA_SECRET=${DWOLLA_SECRET}"                   >> .env.production
          echo "DWOLLA_BASE_URL=${DWOLLA_BASE_URL}"               >> .env.production
          echo "PLAID_CLIENT_ID=${PLAID_CLIENT_ID}"               >> .env.production
          echo "PLAID_SECRET=${PLAID_SECRET}"                     >> .env.production
          echo "PLAID_ENV=${PLAID_ENV}"                           >> .env.production
          echo "PLAID_PRODUCTS=${PLAID_PRODUCTS}"                 >> .env.production
          echo "NEXT_APPWRITE_KEY=${NEXT_APPWRITE_KEY}"           >> .env.production
          echo "APPWRITE_DATABASE_ID=${APPWRITE_DATABASE_ID}"     >> .env.production

      - name: Lint the code
        run: npm run lint

      - name: Run tests
        run: npm run test -- --coverage

      - name: SonarCloud scan
        uses: sonarsource/sonarcloud-github-action@v2
        with:
          projectBaseDir: .
        env:
          SONAR_TOKEN:   ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN:  ${{ secrets.GITHUB_TOKEN }}

      # üèóÔ∏è Build ‚Äì on repasse la variable ¬´ en dur ¬ª devant la commande
      - name: Build the app
            - name: üîé Dump variables (env)
        run: |
          echo "== ENV DUMP ==" 
          env | grep -E '^DWOLLA_|^PLAID_' || true

      - name: üîé Afficher .env.production (si pr√©sent)
        run: |
          if [ -f .env.production ]; then
            echo "== .env.production =="
            cat .env.production
          else
            echo ".env.production n'existe pas"
          fi

      - name: üõ† Build the app (avec export direct)
        run: |
          echo "Je construis avec : DWOLLA_ENVIRONMENT=${DWOLLA_ENVIRONMENT}"
          export DWOLLA_ENV=${DWOLLA_ENVIRONMENT}
          export DWOLLA_ENVIRONMENT=${DWOLLA_ENVIRONMENT}
          npm run build
